{
    "id": "624d73fe5623a70001293692",
    "name": "REST Sample Advanced URL Rewrite Middleware #sample #middleware #rest",
    "slug": "url-rewrite-demo",
    "listen_port": 0,
    "protocol": "",
    "enable_proxy_protocol": false,
    "api_id": "e5fd3eaa01d54f0377adc81872a21689",
    "org_id": "622733a159732c0001bca658",
    "use_keyless": true,
    "use_oauth2": false,
    "use_openid": false,
    "openid_options": {
        "providers": [],
        "segregate_by_client": false
    },
    "oauth_meta": {
        "allowed_access_types": [],
        "allowed_authorize_types": [],
        "auth_login_redirect": ""
    },
    "auth": {
        "use_param": false,
        "param_name": "",
        "use_cookie": false,
        "cookie_name": "",
        "auth_header_name": "Authorization",
        "use_certificate": false,
        "validate_signature": false,
        "signature": {
            "algorithm": "",
            "header": "",
            "secret": "",
            "allowed_clock_skew": 0,
            "error_code": 0,
            "error_message": ""
        }
    },
    "auth_configs": {
        "authToken": {
            "use_param": false,
            "param_name": "",
            "use_cookie": false,
            "cookie_name": "",
            "auth_header_name": "Authorization",
            "use_certificate": false,
            "validate_signature": false,
            "signature": {
                "algorithm": "",
                "header": "",
                "secret": "",
                "allowed_clock_skew": 0,
                "error_code": 0,
                "error_message": ""
            }
        },
        "basic": {
            "use_param": false,
            "param_name": "",
            "use_cookie": false,
            "cookie_name": "",
            "auth_header_name": "Authorization",
            "use_certificate": false,
            "validate_signature": false,
            "signature": {
                "algorithm": "",
                "header": "",
                "secret": "",
                "allowed_clock_skew": 0,
                "error_code": 0,
                "error_message": ""
            }
        },
        "coprocess": {
            "use_param": false,
            "param_name": "",
            "use_cookie": false,
            "cookie_name": "",
            "auth_header_name": "Authorization",
            "use_certificate": false,
            "validate_signature": false,
            "signature": {
                "algorithm": "",
                "header": "",
                "secret": "",
                "allowed_clock_skew": 0,
                "error_code": 0,
                "error_message": ""
            }
        },
        "hmac": {
            "use_param": false,
            "param_name": "",
            "use_cookie": false,
            "cookie_name": "",
            "auth_header_name": "Authorization",
            "use_certificate": false,
            "validate_signature": false,
            "signature": {
                "algorithm": "",
                "header": "",
                "secret": "",
                "allowed_clock_skew": 0,
                "error_code": 0,
                "error_message": ""
            }
        },
        "jwt": {
            "use_param": false,
            "param_name": "",
            "use_cookie": false,
            "cookie_name": "",
            "auth_header_name": "Authorization",
            "use_certificate": false,
            "validate_signature": false,
            "signature": {
                "algorithm": "",
                "header": "",
                "secret": "",
                "allowed_clock_skew": 0,
                "error_code": 0,
                "error_message": ""
            }
        },
        "oauth": {
            "use_param": false,
            "param_name": "",
            "use_cookie": false,
            "cookie_name": "",
            "auth_header_name": "Authorization",
            "use_certificate": false,
            "validate_signature": false,
            "signature": {
                "algorithm": "",
                "header": "",
                "secret": "",
                "allowed_clock_skew": 0,
                "error_code": 0,
                "error_message": ""
            }
        },
        "oidc": {
            "use_param": false,
            "param_name": "",
            "use_cookie": false,
            "cookie_name": "",
            "auth_header_name": "Authorization",
            "use_certificate": false,
            "validate_signature": false,
            "signature": {
                "algorithm": "",
                "header": "",
                "secret": "",
                "allowed_clock_skew": 0,
                "error_code": 0,
                "error_message": ""
            }
        }
    },
    "use_basic_auth": false,
    "basic_auth": {
        "disable_caching": false,
        "cache_ttl": 0,
        "extract_from_body": false,
        "body_user_regexp": "",
        "body_password_regexp": ""
    },
    "use_mutual_tls_auth": false,
    "client_certificates": [],
    "upstream_certificates": {},
    "pinned_public_keys": {},
    "enable_jwt": false,
    "use_standard_auth": false,
    "use_go_plugin_auth": false,
    "enable_coprocess_auth": false,
    "jwt_signing_method": "",
    "jwt_source": "",
    "jwt_identity_base_field": "",
    "jwt_client_base_field": "",
    "jwt_policy_field_name": "",
    "jwt_default_policies": [],
    "jwt_issued_at_validation_skew": 0,
    "jwt_expires_at_validation_skew": 0,
    "jwt_not_before_validation_skew": 0,
    "jwt_skip_kid": false,
    "jwt_scope_to_policy_mapping": {},
    "jwt_scope_claim_name": "",
    "notifications": {
        "shared_secret": "",
        "oauth_on_keychange_url": ""
    },
    "enable_signature_checking": false,
    "hmac_allowed_clock_skew": -1,
    "hmac_allowed_algorithms": [],
    "request_signing": {
        "is_enabled": false,
        "secret": "",
        "key_id": "",
        "algorithm": "",
        "header_list": [],
        "certificate_id": "",
        "signature_header": ""
    },
    "base_identity_provided_by": "",
    "definition": {
        "location": "header",
        "key": "x-api-version",
        "strip_path": false
    },
    "version_data": {
        "not_versioned": false,
        "default_version": "2.0.0",
        "versions": {
            "2.0.0": {
                "name": "2.0.0",
                "expires": "",
                "paths": {
                    "ignored": [],
                    "white_list": [],
                    "black_list": []
                },
                "use_extended_paths": true,
                "extended_paths": {
                    "ignored": [
                        {
                            "path": "/not_found",
                            "ignore_case": false,
                            "method_actions": {
                                "POST": {
                                    "action": "reply",
                                    "code": 404,
                                    "data": "Not Found",
                                    "headers": {}
                                }
                            }
                        }
                    ],
                    "url_rewrites": [
                        {
                            "path": "/query_val_matches/demo",
                            "method": "POST",
                            "match_pattern": "/query_val_matches/demo",
                            "rewrite_to": "/anything/fallback-query_val_matches",
                            "triggers": [
                                {
                                    "on": "any",
                                    "options": {
                                        "header_matches": {},
                                        "query_val_matches": {
                                            "character": {
                                                "match_rx": "kronk",
                                                "reverse": false
                                            }
                                        },
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/disney?hero=$tyk_context.trigger-0-character-0"
                                },
                                {
                                    "on": "any",
                                    "options": {
                                        "header_matches": {},
                                        "query_val_matches": {
                                            "character": {
                                                "match_rx": "yzma",
                                                "reverse": false
                                            }
                                        },
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/disney?villain=$tyk_context.trigger-1-character-0"
                                },
                                {
                                    "on": "any",
                                    "options": {
                                        "header_matches": {},
                                        "query_val_matches": {
                                            "character": {
                                                "match_rx": "^$",
                                                "reverse": false
                                            }
                                        },
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/disney/error-no-category"
                                }
                            ]
                        },
                        {
                            "path": "/query_val_matches/multiple_tiggers",
                            "method": "POST",
                            "match_pattern": "\\?([^\u0026=]+)=([^\u0026=]+)(?:\u0026([^\u0026=]+)=([^\u0026=]+))(?:\u0026([^\u0026=]+)=([^\u0026=]+))",
                            "rewrite_to": "tyk://e5fd3eaa01d54f0377adc81872a21689/not_found?$1=$2\u0026$3=$4\u0026$5=$6",
                            "triggers": [
                                {
                                    "on": "all",
                                    "options": {
                                        "header_matches": {},
                                        "query_val_matches": {
                                            "filter.id": {
                                                "match_rx": "7",
                                                "reverse": false
                                            },
                                            "filter.league.code": {
                                                "match_rx": "Pac12Football",
                                                "reverse": false
                                            },
                                            "filter.name": {
                                                "match_rx": "test",
                                                "reverse": false
                                            }
                                        },
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/query_val_matches/Pac12Football/$1"
                                },
                                {
                                    "on": "all",
                                    "options": {
                                        "header_matches": {},
                                        "query_val_matches": {
                                            "filter.id": {
                                                "match_rx": "4",
                                                "reverse": false
                                            },
                                            "filter.league.code": {
                                                "match_rx": "NFL",
                                                "reverse": false
                                            },
                                            "filter.name": {
                                                "match_rx": "test",
                                                "reverse": false
                                            }
                                        },
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/query_val_matches/NFL/$1"
                                }
                            ]
                        },
                        {
                            "path": "/header_matches/demo",
                            "method": "POST",
                            "match_pattern": "/header_matches/demo",
                            "rewrite_to": "/anything/fallback-header_matches",
                            "triggers": [
                                {
                                    "on": "all",
                                    "options": {
                                        "header_matches": {
                                            "X-Enable-Beta": {
                                                "match_rx": "true",
                                                "reverse": false
                                            }
                                        },
                                        "query_val_matches": {},
                                        "path_part_matches": {},
                                        "session_meta_matches": {
                                            "beta_enabled": {
                                                "match_rx": "true",
                                                "reverse": false
                                            }
                                        },
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/header_matches/beta/$1"
                                }
                            ]
                        },
                        {
                            "path": "/header_matches/alphanumeric",
                            "method": "POST",
                            "match_pattern": "/header_matches/alphanumeric",
                            "rewrite_to": "/anything/fallback-header_matches",
                            "triggers": [
                                {
                                    "on": "all",
                                    "options": {
                                        "header_matches": {
                                            "Digits": {
                                                "match_rx": "true",
                                                "reverse": false
                                            },
                                            "Letters": {
                                                "match_rx": "true",
                                                "reverse": false
                                            }
                                        },
                                        "query_val_matches": {},
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/header_matches/alpha_numeric/$1"
                                }
                            ]
                        },
                        {
                            "path": "/payload_matches/demo",
                            "method": "POST",
                            "match_pattern": "anything/payload_matches",
                            "rewrite_to": "anything/fallback-payload_matches",
                            "triggers": [
                                {
                                    "on": "any",
                                    "options": {
                                        "header_matches": {},
                                        "query_val_matches": {},
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "(\\w+-*\\w*)",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/payload_matches?value1=$tyk_context.trigger-0-payload-0\u0026value2=$tyk_context.trigger-0-payload-1\u0026value2=$tyk_context.trigger-0-payload-2\u0026value4=$tyk_context.trigger-0-payload-3\u0026value4=$tyk_context.trigger-0-payload-4\u0026value5=$tyk_context.trigger-0-payload-5\u0026value6=$tyk_context.trigger-0-payload-6\u0026value7=$tyk_context.trigger-0-payload-7\u0026value8=$tyk_context.trigger-0-payload-8\u0026value9=$tyk_context.trigger-0-payload-9"
                                },
                                {
                                    "on": "any",
                                    "options": {
                                        "header_matches": {},
                                        "query_val_matches": {},
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "\"test\"",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/payload_matches?match=true\u0026value1=$tyk_context.trigger-1-payload-0"
                                },
                                {
                                    "on": "any",
                                    "options": {
                                        "header_matches": {},
                                        "query_val_matches": {},
                                        "path_part_matches": {},
                                        "session_meta_matches": {},
                                        "request_context_matches": {},
                                        "payload_matches": {
                                            "match_rx": "\"test\":\\s*\"([^\"]+)\"",
                                            "reverse": false
                                        }
                                    },
                                    "rewrite_to": "/anything/payload_matches?match=true\u0026value=$tyk_context.trigger-2-payload-0"
                                }
                            ]
                        }
                    ]
                },
                "global_headers": {},
                "global_headers_remove": [],
                "global_response_headers": {},
                "global_response_headers_remove": [],
                "ignore_endpoint_case": false,
                "global_size_limit": 0,
                "override_target": ""
            }
        }
    },
    "uptime_tests": {
        "check_list": [],
        "config": {
            "expire_utime_after": 0,
            "service_discovery": {
                "use_discovery_service": false,
                "query_endpoint": "",
                "use_nested_query": false,
                "parent_data_path": "",
                "data_path": "",
                "port_data_path": "",
                "target_path": "",
                "use_target_list": false,
                "cache_timeout": 60,
                "endpoint_returns_list": false
            },
            "recheck_wait": 0
        }
    },
    "proxy": {
        "preserve_host_header": false,
        "listen_path": "/rest-mw-url-rewrite-adv/",
        "target_url": "http://httpbin.org",
        "disable_strip_slash": false,
        "strip_listen_path": true,
        "enable_load_balancing": false,
        "target_list": [],
        "check_host_against_uptime_tests": false,
        "service_discovery": {
            "use_discovery_service": false,
            "query_endpoint": "",
            "use_nested_query": false,
            "parent_data_path": "",
            "data_path": "",
            "port_data_path": "",
            "target_path": "",
            "use_target_list": false,
            "cache_timeout": 0,
            "endpoint_returns_list": false
        },
        "transport": {
            "ssl_insecure_skip_verify": false,
            "ssl_ciphers": [],
            "ssl_min_version": 0,
            "ssl_max_version": 0,
            "ssl_force_common_name_check": false,
            "proxy_url": ""
        }
    },
    "disable_rate_limit": false,
    "disable_quota": false,
    "custom_middleware": {
        "pre": [],
        "post": [],
        "post_key_auth": [],
        "auth_check": {
            "name": "",
            "path": "",
            "require_session": false,
            "raw_body_only": false
        },
        "response": [],
        "driver": "",
        "id_extractor": {
            "extract_from": "",
            "extract_with": "",
            "extractor_config": {}
        }
    },
    "custom_middleware_bundle": "",
    "cache_options": {
        "cache_timeout": 60,
        "enable_cache": false,
        "cache_all_safe_requests": false,
        "cache_response_codes": [],
        "enable_upstream_cache_control": false,
        "cache_control_ttl_header": "",
        "cache_by_headers": []
    },
    "session_lifetime": 0,
    "active": true,
    "internal": false,
    "auth_provider": {
        "name": "",
        "storage_engine": "",
        "meta": {}
    },
    "session_provider": {
        "name": "",
        "storage_engine": "",
        "meta": {}
    },
    "event_handlers": {
        "events": {}
    },
    "enable_batch_request_support": false,
    "enable_ip_whitelisting": false,
    "allowed_ips": [],
    "enable_ip_blacklisting": false,
    "blacklisted_ips": [],
    "dont_set_quota_on_create": false,
    "expire_analytics_after": 0,
    "response_processors": [
        {
            "name": "header_injector",
            "options": {}
        }
    ],
    "CORS": {
        "enable": false,
        "allowed_origins": [
            "*"
        ],
        "allowed_methods": [],
        "allowed_headers": [
            "Origin",
            "Accept",
            "Content-Type",
            "X-Requested-With",
            "Authorization"
        ],
        "exposed_headers": [],
        "allow_credentials": false,
        "max_age": 24,
        "options_passthrough": false,
        "debug": false
    },
    "domain": "",
    "certificates": [],
    "do_not_track": false,
    "tags": [
        "edge"
    ],
    "enable_context_vars": false,
    "config_data": {},
    "tag_headers": [],
    "global_rate_limit": {
        "rate": 0,
        "per": 0
    },
    "strip_auth_data": false,
    "enable_detailed_recording": false,
    "graphql": {
        "enabled": false,
        "execution_mode": "proxyOnly",
        "version": "",
        "schema": "",
        "type_field_configurations": [],
        "playground": {
            "enabled": false,
            "path": ""
        },
        "engine": {
            "field_configs": [],
            "data_sources": []
        },
        "proxy": {
            "auth_headers": {}
        },
        "subgraph": {
            "sdl": ""
        },
        "supergraph": {
            "subgraphs": [],
            "merged_sdl": "",
            "global_headers": {}
        }
    }
}